스택(Stack) 큐(Queue) 덱(Deque) : 데이터를 저장하고 관리하는 자료구조. 데이터를 다양한 방식으로 저장하고 접근할 수 있도록 설계되어
								있음. 다양한 알고리즘과 문제 해결.
								
								1.스택(Stack) : 데이터를 후입선출(LIFO Last In First Out)의 원칙에 따라 저장하는
											   자료구조. 가장 최근에 삽입한 데이터가 가장 먼저 제거.
											   push(item) : 스택에 데이터 추가.
											   pop()	  : 스택의 맨 위(가장 최근)의 데이터를 제거하고 반환.
											   peek()	  : 스택의 맨 위(가장 최근)의 데이터를 반환.
								==========================================================================
								*ArrayList vs Stack : 둘다 데이터를 저장하고 관리하는데 사용되는 자료구조.
										  ArrayList : 동적배열로 구현된 자료구조. 크기가 동적으로 조절가능. 데이터를 순서
										  			  대로 저장하고 중간 삽입 및 삭제 작업 효율. 데이터를 추가하거나
										  			  제거할 때 일반적으로 예외가 없음.
										  	  Stack : LIFO순서. 임시 데이터 저장. 함수 호출 복귀. 깊이우선탐색(DFS).
										  	  		  pop연산을 빈 스택에서 수행하려고 할 때 예외 발생.
							    ==========================================================================
							    2.큐(Queue) : 데이터를 선입선출(FIFO First In First Out)의 원칙에 따라 저장하는
											  자료구조. 데이터가 큐에 추가되면 가장 먼저 추가된 데이터가 가장 먼저 제거되는
											  방식.
											  offer(item) : 큐에 데이터 추가.
											  poll()	  : 큐에서 요소를 제거하고 반환.
											  peek()	  : 큐의 front 요소를 확인하고 반환. 요소 제거 안됨.
											  size()	  : 큐의 크기 확인.
								
								3.디큐(Deque) : Double-Ended-Queue. 양쪽 끝에서 요소를 추가하거나 제거할 수 있는
											   자료구조. 인터페이스이기 때문에 LinkedList, ArrayDeque 사용.
											   큐와 스택의 기능을 모두 수행할 수 있음.
											   addFirst(), offerFirst()	  : 디큐 맨 앞에 요소추가
											   addLast(), offerLast()	  : 디큐 맨 뒤에 요소추가
											   removeFirst(), pollFirst() : 디큐 맨 앞에서 요소 제거 후 반환
											   removeLast(), pollLast()	  : 디큐 맨 뒤에서 요소 제거 후 반환
											   getFirst(), peekFirst()	  : 디큐 맨 앞에 요소를 가져옴
											   getLast(), peekLast()	  : 디큐 맨 뒤에 요소를 가져옴
											   *
											   예)
											   addFirst()	: 만약 요소를 추가할 공간이 부족하거나 제약조건에 어긋나는
											   				  경우 예외 발생. 반환 없음.
											   offerFirst() : 요소를 추가하려고 할 때 예외를 발생시키지 않음.
											   				  요소추가 성공하면 true, 실패하면 false 반환.
											   removeFirst() : 디큐가 비어있는 경우 예외 발생. 비어있을 때 예외를 발생
											   				   시키므로 항상 요소 반환.
											   pollFirst()   : 디큐가 비어있을 경우 null 반환. 예외처리를 하지 않고
											   				   사용할 수 있음. 요소가 성공적으로 제거되면 해당 요소를
											   				   반환.
											   getFirst()  : 비어있을 경우 예외 발생. 요소를 가져올 때 예외를 처리하고자
											   				 할 때 사용.
											   peekFirst() : 비어있을 경우 null 반환. 예외를 처리하지 않고 가져오기가
											   				 실패할 경우 대비.